{"version":3,"sources":["login.jsx","recipe.jsx","recipe-list.jsx","components.jsx","food-list.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Login","props","state","user","pass","error","loading","this","setState","signInWithEmailAndPassword","auth","then","userCredential","catch","e","key","checkPassword","className","onChange","target","name","value","type","placeholder","onKeyPress","handleKeyPress","bind","style","color","onClick","React","Component","i","RecipeClass","id","params","recipeId","servings","text","items","search","searchResults","editing","handleChange","onDragEnd","fetchRecipe","docRef","doc","db","getDoc","docSnap","exists","data","length","item","iRef","iSnap","console","log","querySearch","ref","collection","q","query","where","limit","getDocs","querySnapshot","forEach","doc_","push","idx","newItem","amount","volume","visible","concat","totalCals","parseInt","cals","totalservings","parseFloat","editedItem","updateDoc","result","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","args","field","produce","draft","scale","reduce","sum","item_","to","marginRight","save","toFixed","disabled","autoComplete","role","map","addItem","unit","droppableId","provided","snapshot","droppableProps","innerRef","isDraggingOver","draggableId","isDragDisabled","draggableProps","dragHandleProps","isDragging","draggableStyle","background","padding","handleItemChange","handleItemChangeConvert","vol_unit","toggleVisible","deleteItem","Recipe","useParams","navigate","useNavigate","RecipeList","fetchRecipes","addDoc","window","location","href","protocol","host","newRecipe","logout","ItemForm","protein","fat","carbs","handleSubmit","prevProps","onSubmit","input","nameInput","preventDefault","focus","FoodList","editId","handleEditSubmit","queryItems","deleteDoc","startEdit","width","aria-label","App","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","getAuth","onAuthStateChanged","signOut","path","element","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ed0d214.chunk.js","sourcesContent":["import React from \"react\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: '',\n      pass: '',\n      error: '',\n      loading: false\n    };\n\n  }\n  componentDidMount() {\n\n  }\n  componentWillUnmount() {\n  }\n  checkPassword() {\n    this.setState({\n      loading: true\n    })\n    signInWithEmailAndPassword(this.props.auth, this.state.user, this.state.pass)\n      .then((userCredential) => {\n        //console.log(userCredential);\n        //const user = userCredential.user;\n        // Refresh?\n        //window.location.reload();\n      })\n      .catch((error) => {\n        // Set error message\n        //console.log(error);\n        //console.log(error.code);\n        //console.log(error.message);\n        //const errorCode = error.code;\n        //const errorMessage = error.message;\n        this.setState({\n          error:'Password is incorrect.',\n          loading: false\n        })\n      });\n  }\n  handleKeyPress(e) {\n    if(e.key === 'Enter'){\n      this.checkPassword();\n    }\n  }\n  render() {\n    return(\n      <div className=\"container\">\n        <div className=\"columns is-multiline\">\n          <div className=\"column\"/>\n          <div className=\"column\">\n            <br/><br/><br/>\n            <div className=\"box\">\n              <div className=\"field\">\n                <label className=\"label is-smed\">Email</label>\n                <p className=\"control has-icons-left has-icons-right\">\n                  <input onChange={(e) => this.setState({[e.target.name]: e.target.value})} name=\"user\" value={this.state.user} className=\"input is-smed\" type=\"email\" placeholder=\"Email\"/>\n                  <span className=\"icon is-smed is-left\">\n                    <i className=\"fas fa-envelope\"></i>\n                  </span>\n                </p>\n              </div>\n              <div className=\"field\">\n                <label className=\"label is-smed\">Password</label>\n                <p className=\"control has-icons-left\">\n                  <input onChange={(e) => this.setState({[e.target.name]: e.target.value})} name=\"pass\" value={this.state.pass} className=\"input is-smed\" type=\"password\" onKeyPress={this.handleKeyPress.bind(this)} placeholder=\"Password\"/>\n                  <span className=\"icon is-smed is-left\">\n                    <i className=\"fas fa-lock\"></i>\n                  </span>\n                </p>\n                <p style={{color:'red'}}>{this.state.error}</p>\n              </div>\n              <div className=\"field\">\n                <p className=\"control\">\n                  <button className={\"button is-info is-smed \"+(this.state.loading ? \"is-loading\":\"\")} onClick={this.checkPassword.bind(this)}>Log in</button>\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"column\"/>\n          \n        </div>\n        \n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport produce from 'immer';\n\nimport { collection, getDoc, getDocs, doc, query, where, limit, updateDoc } from \"firebase/firestore\";\n\n\nconst reorder = (list, startIndex, endIndex) => {\n  const result = Array.from(list);\n  const [removed] = result.splice(startIndex, 1);\n  result.splice(endIndex, 0, removed);\n\n  return result;\n};\n\n\n//const grid = 8;\n\nconst getItemStyle = (isDragging, draggableStyle) => ({\n  // some basic styles to make the items look a bit nicer\n  //userSelect: \"none\",\n  //padding: grid * 2,\n  //margin: `0 0 ${grid}px 0`,\n\n  // change background colour if dragging\n  background: isDragging ? \"lightgreen\" : \"\",\n\n  // styles we need to apply on draggables\n  ...draggableStyle\n});\n\nconst getListStyle = isDraggingOver => ({\n  //background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\n  //padding: grid,\n  //width: 250\n});\n\n\nclass RecipeClass extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: props.params.recipeId,\n      name: '',\n      servings: '',\n      text: '',\n      items: [],\n\n      search: '',\n      searchResults: [],\n      editing: -1,\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n  componentDidMount() {\n    this.fetchRecipe();\n\n\n    // name | amount | cals | visible | delete\n  }\n  async fetchRecipe() {\n    const docRef = doc(this.props.db, \"recipes\", this.state.id);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      //console.log(\"Document data:\", docSnap.data());\n      let data = docSnap.data();\n      for (let i=0;i<data.items.length;i++) {\n        let item = data.items[i];\n        const iRef = doc(this.props.db, \"fooditems\", item.id);\n        const iSnap = await getDoc(iRef);\n        data.items[i].item = iSnap.data();\n      }\n      this.setState({\n        name: data.name,\n        servings: data.servings,\n        text:data.text,\n        items: data.items //[{id, name, amount, visible, item}]\n      })\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }\n  handleKeyPress(e) {\n    if(e.key === 'Enter'){\n      this.querySearch();\n    }\n  }\n  async querySearch(e) {\n    if (this.state.search === '') {\n      this.setState({\n        searchResults: []\n      })\n      return;\n    }\n    const ref = collection(this.props.db, \"fooditems\");\n    const q = query(ref, where('name','>=',this.state.search), where('name','<=',this.state.search+'\\uf8ff'), limit(5))\n    const querySnapshot = await getDocs(q);\n\n    let searchResults = [];\n    querySnapshot.forEach((doc_) => {\n      const data = doc_.data();\n      data.id = doc_.id;\n      searchResults.push(data);\n    });\n\n    this.setState({\n      searchResults\n    })\n  }\n  async addItem(idx, e) {\n    let data = {...this.state.searchResults[idx]};\n    let newItem = {\n      id: data.id,\n      name: data.name,\n      amount: data.amount,\n      volume: data.volume,\n      visible: true,\n      item: data\n    }\n\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n      searchResults: [],\n      search: ''\n    }));\n  }\n  async save(e) {\n    let items = [];\n    let totalCals = 0;\n    for (let i=0;i<this.state.items.length;i++) {\n      let item = this.state.items[i];\n      if (item.visible) {\n        totalCals += (parseInt(item.item.cals)*(parseInt(item.item.servings)/parseInt(item.item.totalservings))*(parseFloat(item.amount)/parseFloat(item.item.amount)));\n      }\n\n      items.push({\n        id:item.id,\n        amount:item.amount,\n        volume:item.volume,\n        name:item.name,\n        visible:item.visible\n      })\n    }\n    let editedItem = {\n      name: this.state.name,\n      servings: this.state.servings,\n      text:this.state.text,\n      totalCals: totalCals,\n      items: items\n    }\n    const iRef = doc(this.props.db, \"recipes\", this.state.id);\n    await updateDoc(iRef, editedItem);\n\n  }\n  onDragEnd(result) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n\n    const items = reorder(\n      this.state.items,\n      result.source.index,\n      result.destination.index\n    );\n\n    this.setState({\n      items\n    });\n  }\n  startEdit(i, e) {\n    this.setState({\n      editing: i\n    })\n  }\n  handleChange(e) {\n    var args = {};\n    args[e.target.id] = e.target.value;\n    this.setState(args);\n  }\n  handleItemChange(field, idx, e) {\n    const value = e.target.value;\n    this.setState(produce((draft) => {\n      draft.items[idx][field] = value;\n    }))\n    //this.state.items[idx][field] = e.target.value;\n    //this.setState({items:this.state.items});\n  }\n  handleItemChangeConvert(field, idx, e) {\n    const value = e.target.value;\n    this.setState(produce((draft) => {\n      const item = draft.items[idx];\n\n      if (!item.item.volume || item.item.volume === '') {\n        item[field] = value;\n        return;\n      }\n\n      if (field === 'amount') {\n        item[field] = value;\n        let scale = value/item.item.amount;\n        item.volume = item.item.volume*scale;\n      } else if (field === 'volume') {\n        item[field] = value;\n        let scale = value/item.item.volume;\n        item.amount = item.item.amount*scale;\n      }\n    }))\n  }\n  toggleVisible(index, e) {\n    this.setState(produce((draft) => {\n      draft.items[index].visible = !draft.items[index].visible;\n    }))\n  }\n  deleteItem(index, e) {\n    this.state.items.splice(index, 1);\n    this.setState(state => ({\n      items: this.state.items,\n    }));\n  }\n  render() {\n\n    // TODO\n    // have two pages: one for new/choose recipe, one for displaying/editing recipe\n    // create new recipe\n    // search for food in db -> query by filter -> see results to click -> add item to recipe\n    // recipe schema is: name, servings, text, [{fooditem_id, ratio, visible}]\n\n\n\n\n    // search food -> select food -> Add item -> fetch food -> add to list\n    // edit ratio/visible\n    // edit order\n    // delete item\n    // save\n\n\n\n    /*var totalG = this.state.items.reduce(function (sum, item_) {\n      let item = item_.item;\n      if (item.visible)\n        return sum + (item.protein*item.servings/item.totalservings) + (item.fat*item.servings/item.totalservings) + (item.carbs*item.servings/item.totalservings);\n      return sum;\n    }, 0);\n\n    var totalProtein = this.state.items.reduce(function (sum, item_) {\n      let item = item_.item;\n      if (item.visible)  \n        return sum + (item.protein*item.servings/item.totalservings);\n      return sum;\n    }, 0);\n\n    var totalFat = this.state.items.reduce(function (sum, item_) {\n      let item = item_.item;\n      if (item.visible)  \n        return sum + (item.fat*item.servings/item.totalservings);\n      return sum;\n    }, 0);\n\n    var totalCarbs = this.state.items.reduce(function (sum, item_) {\n      let item = item_.item;\n      if (item.visible)  \n        return sum + (item.carbs*item.servings/item.totalservings);\n      return sum;\n    }, 0);*/\n\n    var totalCals = this.state.items.reduce(function (sum, item_) {\n      let item = item_.item;\n      if (item_.visible)\n        return sum + (parseInt(item.cals)*(parseInt(item.servings)/parseInt(item.totalservings))*(parseFloat(item_.amount)/parseFloat(item.amount)));\n      return sum;\n    }, 0);\n\n    return (\n      <div className=\"container\">\n        <br/>\n        <Link className=\"button\" to=\"/macroman/\" style={{marginRight:12}}>Back</Link>\n        <button className=\"button\" style={{marginRight:36}} onClick={this.save.bind(this)}>Save</button>\n        <span className=\"title\" style={{marginRight:24}}>{this.state.name}</span>\n        <span className=\"subtitle is-5\">{(totalCals/(this.state.servings || 1)).toFixed(2)} cals</span>\n        <br/><br/>\n\n        <div className=\"field has-addons\">\n          <div className=\"control\">\n            <button onClick={(e) => this.setState({servings: this.state.servings-1})} className=\"button\" disabled={this.state.servings < 2}>\n              <span className=\"icon is-small\">\n                <i className=\"fa fa-chevron-left\"></i>\n              </span>\n            </button>\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-static\">\n              {this.state.servings} {'serving'+(this.state.servings === 1 ? '': 's')}\n            </button>\n          </div>\n          <div className=\"control\">\n            <button onClick={(e) => this.setState({servings: this.state.servings+1})} className=\"button\">\n              <span className=\"icon is-small\">\n                <i className=\"fa fa-chevron-right\"></i>\n              </span>\n            </button>\n          </div>\n        </div>\n\n        \n\n\n\n        <div className={\"dropdown is-fullwidth\"+(this.state.searchResults.length > 0 ? ' is-active':'')}>\n          <div className=\"dropdown-trigger\">\n            <div className=\"field has-addons\">\n              <p className=\"control is-expanded\">\n                <input onKeyPress={this.handleKeyPress.bind(this)} id=\"search\" className=\"input is-fullwidth\" autoComplete=\"off\" type=\"text\" placeholder={\"Enter text\"} value={this.state.search} onChange={this.handleChange}/>\n              </p>\n              <p className=\"control\">\n                <button onClick={this.querySearch.bind(this)} className=\"button\">Search</button>\n              </p>\n            </div>\n          </div>\n          <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n            <div className=\"dropdown-content\">\n              {this.state.searchResults.map((item,index) => {\n                return <a key={'search'+index} className=\"dropdown-item\" onClick={this.addItem.bind(this,index)}>{item.name+' '+item.amount+' '+item.unit}</a>\n              })}\n            </div>\n          </div>\n        </div>\n\n        \n\n        \n\n        <DragDropContext onDragEnd={this.onDragEnd}>\n          <table className=\"table is-fullwidth is-hoverable is-narrow\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Amount</th>\n                <th>Volume</th>\n                <th>Cals</th>\n                <th></th>\n                <th></th>\n                <th></th>\n              </tr>\n            </thead>\n            <Droppable droppableId=\"droppable\">\n              {(provided, snapshot) => (\n                <tbody\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  style={getListStyle(snapshot.isDraggingOver)}>\n                  {this.state.items.map((item, index) => (\n                    <Draggable key={'drag'+index} draggableId={'drag'+index} index={index} isDragDisabled={this.state.editing !== -1}>\n                      {(provided, snapshot) => (\n                        <tr\n                          className={item.visible ? '' : 'has-text-grey-lighter'}\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          style={getItemStyle(\n                            snapshot.isDragging,\n                            provided.draggableProps.style\n                          )}\n                        >\n                          <td style={this.state.editing === index ? {padding:0} : {}}>\n                            {this.state.editing === index ?\n                              <input value={item.name} onChange={this.handleItemChange.bind(this,'name',index)} className=\"input\" type=\"text\" placeholder=\"Name\"/>\n                              :\n                              item.name\n                            }\n                          </td>\n                          <td style={this.state.editing === index ? {padding:0} : {}}>\n                            {this.state.editing === index ?\n                              <div className=\"field has-addons\">\n                                <p className=\"control\">\n                                  <input value={item.amount} onChange={this.handleItemChangeConvert.bind(this,'amount',index)} className=\"input\" type=\"text\" placeholder=\"Amount\"/>\n                                </p>\n                                <p className=\"control\">\n                                  <button className=\"button is-static\">\n                                    {item.item.unit}\n                                  </button>\n                                </p>\n                              </div>\n                              \n                              :\n                              item.amount+' '+item.item.unit\n                            }\n                          </td>\n                          <td style={this.state.editing === index ? {padding:0} : {}}>\n                            {this.state.editing === index && (item.item.volume && item.item.volume !== '') ?\n                              <div className=\"field has-addons\">\n                                <p className=\"control\">\n                                  <input value={item.volume} onChange={this.handleItemChangeConvert.bind(this,'volume',index)} className=\"input\" type=\"text\" placeholder=\"Volume\"/>\n                                </p>\n                                <p className=\"control\">\n                                  <button className=\"button is-static\">\n                                    {item.item.vol_unit || ''}\n                                  </button>\n                                </p>\n                              </div>\n                              \n                              :\n                              (item.volume || '')+' '+(item.item.vol_unit || '')\n                            }\n                          </td>\n                          <td>{(parseInt(item.item.cals)*(parseInt(item.item.servings)/parseInt(item.item.totalservings))*(parseFloat(item.amount)/parseFloat(item.item.amount))).toFixed(2)}</td>\n                          \n                          <td>\n                            <p className=\"buttons\" key={'edit'+index+'_'+this.state.editing}>\n                              {this.state.editing !== index ? <button className=\"button is-small\" onClick={(e) => this.setState({editing:index})}>\n                                <span className=\"icon is-small has-text-danger\">\n                                  <i className=\"fas fa-pen\"></i>\n                                </span>\n                              </button> : <button className=\"button is-small\" onClick={(e) => this.setState({editing:-1})}>\n                                <span className=\"icon is-small has-text-danger\">\n                                  <i className=\"fas fa-check\"></i>\n                                </span>\n                              </button>}\n                            </p>\n                          </td>\n                          <td>\n                            <p className=\"buttons\">\n                              <button className=\"button is-small\" onClick={this.toggleVisible.bind(this, index)}>\n                                <span className={\"icon is-small \"+(item.visible ? '' : 'has-text-grey-lighter')}>\n                                  <i className=\"fas fa-eye\"></i>\n                                </span>\n                              </button>\n                            </p>\n                          </td>\n                          <td>\n                            <p className=\"buttons\">\n                              <button className=\"button is-small\" onClick={this.deleteItem.bind(this, index)}>\n                                <span className=\"icon is-small has-text-danger\">\n                                  <i className=\"fas fa-times\"></i>\n                                </span>\n                              </button>\n                            </p>\n                          </td>\n                        </tr>\n                      )}\n                    </Draggable>\n                  ))}\n                  {provided.placeholder}\n                </tbody>\n              )}\n            </Droppable>\n            <tfoot>\n            <tr>\n              <td>Total</td>\n              <td></td>\n              <td></td>\n              <td>{totalCals.toFixed(2)}</td>\n              <td></td>\n              <td></td>\n              <td></td>\n            </tr>\n          </tfoot>\n          </table>\n        </DragDropContext>\n\n\n\n      </div>\n    );\n  }\n}\n\n\n\n\n\nexport default function Recipe(props) {\n    let params = useParams();\n    let navigate = useNavigate();\n    return <RecipeClass {...props} params={params} navigate={navigate} />\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nimport { collection, addDoc, getDocs } from \"firebase/firestore\";\n\n\n\nexport default class RecipeList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: '',\n      items: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    this.fetchRecipes();\n  }\n  async fetchRecipes() {\n    const querySnapshot = await getDocs(collection(this.props.db, \"recipes\"));\n    let items = [];\n    querySnapshot.forEach((doc_) => {\n      const data = doc_.data();\n      data.id = doc_.id;\n      items.push(data);\n    });\n\n    this.setState({\n      items\n    })\n  }\n  async newRecipe() {\n    try {\n      // name, servings, text, [{fooditem_id, ratio, visible}]\n      let newItem = {name: this.state.name, servings: 4, text: '', items: []};\n      const docRef = await addDoc(collection(this.props.db, \"recipes\"), newItem);\n      //console.log(\"Document written with ID: \", docRef.id);\n      // TODO go to /recipe/<docRef.id>\n      window.location.href = window.location.protocol + \"//\" + window.location.host + '/macroman/recipes/' + docRef.id;\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n  render() {\n\n    // TODO\n    // have two pages: one for new/choose recipe, one for displaying/editing recipe\n    // create new recipe\n    // search for food in db -> query by filter -> see results to click -> add item to recipe\n    // recipe schema is: name, servings, text, [{fooditem_id, ratio, visible}]\n\n    \n\n    return (\n      <div className=\"container\">\n        <br/><br/>\n\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Cals</th>\n              <th>Servings</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.items.map((item,index) => {\n              return <tr>\n                <td><Link key={'link_'+index} to={\"/macroman/recipes/\"+item.id}>{item.name}</Link></td>\n                <td>{parseInt(parseFloat(item.totalCals)/parseInt(item.servings))}</td>\n                <td>{item.servings}</td>\n                <td>Remove</td>\n              </tr>\n            })}\n          </tbody>\n        </table>\n\n        <nav className=\"level\">\n          <div className=\"level-left\">\n            <div className=\"level-item\">\n              <div className=\"field\">\n                <p className=\"control\">\n                  <input value={this.state.name} id=\"name\" onChange={this.handleChange} className=\"input\" type=\"text\" placeholder=\"Name\"/>\n                </p>\n              </div>\n            </div>\n            <div className=\"level-item\">\n              <button onClick={this.newRecipe.bind(this)} className=\"button\">Add</button>\n            </div>\n          </div>\n        </nav>\n        \n        <Link className=\"button\" to=\"/macroman/foods\" style={{marginRight:12}}>Food index</Link>\n        <button onClick={this.props.logout} className=\"button\">Logout</button>\n\n      </div>\n    );\n  }\n\n  handleChange(e) {\n    var args = {};\n    args[e.target.id] = e.target.value;\n    this.setState(args);\n  }\n}\n","import React from 'react';\n\n\nclass ItemForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      name: props.name || '',\n      cals: props.cals || '',\n      protein: props.protein || '0',\n      fat: props.fat || '0',\n      carbs: props.carbs || '0',\n      servings: props.servings || \"1\",\n      totalservings: props.totalservings || \"1\",\n      volume: props.volume || '',\n      vol_unit: props.vol_unit || '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.editing !== this.props.editing) {\n      this.setState({\n        name: this.props.item.name,\n        cals: this.props.item.cals,\n        protein: this.props.item.protein,\n        fat: this.props.item.fat,\n        carbs: this.props.item.carbs,\n        servings: this.props.item.servings,\n        totalservings: this.props.item.totalservings,\n        amount: this.props.item.amount,\n        unit: this.props.item.unit,\n        volume: this.props.item.volume,\n        vol_unit: this.props.item.vol_unit\n      })\n    }\n  }\n  render() {\n    return (\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"field is-horizontal\">\n                <div className=\"field-body\">\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"name\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Name\"\n                        ref={(input) => { this.nameInput = input; }}\n                        onChange={this.handleChange}\n                        value={this.state.name} />\n                    </p>\n                  </div>\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"cals\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Cals\"\n                        onChange={this.handleChange}\n                        value={this.state.cals} />\n                    </p>\n                  </div>\n\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"protein\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Protein\"\n                        onChange={this.handleChange}\n                        value={this.state.protein} />\n                    </p>\n                  </div>\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"fat\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Fat\"\n                        onChange={this.handleChange}\n                        value={this.state.fat} />\n                    </p>\n                  </div>\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"carbs\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Carbs\"\n                        onChange={this.handleChange}\n                        value={this.state.carbs} />\n                    </p>\n                  </div>\n\n                </div>\n              </div>\n              <div className=\"field is-horizontal\">\n                <div className=\"field-body\">\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"servings\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Servings\"\n                        onChange={this.handleChange}\n                        value={this.state.servings} />\n                    </p>\n                  </div>\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"totalservings\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Total servings\"\n                        onChange={this.handleChange}\n                        value={this.state.totalservings} />\n                    </p>\n                  </div>\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"amount\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Amount\"\n                        onChange={this.handleChange}\n                        value={this.state.amount} />\n                    </p>\n                  </div>\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"unit\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Unit\"\n                        onChange={this.handleChange}\n                        value={this.state.unit} />\n                    </p>\n                  </div>\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"volume\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Volume\"\n                        onChange={this.handleChange}\n                        value={this.state.volume} />\n                    </p>\n                  </div>\n                  <div className=\"field\">\n                    <p className=\"control\">\n                      <input \n                        id=\"vol_unit\"\n                        className=\"input is-small\" \n                        type=\"text\" \n                        placeholder=\"Unit\"\n                        onChange={this.handleChange}\n                        value={this.state.vol_unit} />\n                    </p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"field is-horizontal\">\n                <div className=\"field-body\">\n                  \n                  <div className=\"field\">\n                    <div className=\"control\">\n                      <button className=\"button is-primary\">\n                        Add item\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n    );\n  }\n\n  handleChange(e) {\n    var args = {};\n    args[e.target.id] = e.target.value;\n    this.setState(args);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    /*if (!this.state.text.length) {\n      return;\n    }*/\n    const newItem = {\n      name: this.state.name,\n      cals: this.state.cals,\n      protein: this.state.protein,\n      fat: this.state.fat,\n      carbs: this.state.carbs,\n      servings: this.state.servings,\n      totalservings: this.state.totalservings,\n      amount: this.state.amount,\n      unit: this.state.unit,\n      volume: this.state.volume,\n      vol_unit: this.state.vol_unit,\n    };\n    this.props.handleSubmit(newItem);\n    this.setState(state => ({\n      name: '',\n      cals: '',\n      protein: '0',\n      fat: '0',\n      carbs: '0',\n      servings: '1',\n      totalservings: '1',\n      amount: '',\n      unit: '',\n      volume: '',\n      vol_unit: ''\n    }));\n    this.nameInput.focus();\n  }\n}\n\nexport { ItemForm }","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { ItemForm } from './components';\n\nimport { collection, addDoc, getDocs, doc, deleteDoc, updateDoc } from \"firebase/firestore\";\n\n\nexport default class FoodList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      items: [],\n      editing: -1,\n      editId: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n  }\n  componentDidMount() {\n    this.queryItems();\n  }\n  async queryItems() {\n    const querySnapshot = await getDocs(collection(this.props.db, \"fooditems\"));\n    let items = [];\n    querySnapshot.forEach((doc_) => {\n      const data = doc_.data();\n      data.id = doc_.id;\n      items.push(data);\n    });\n\n    this.setState({\n      items\n    })\n  }\n\n  startEdit(i, e) {\n    this.setState({\n      editing: i,\n      editId: this.state.items[i].id\n    })\n  }\n\n  handleChange(e) {\n    var args = {};\n    args[e.target.id] = e.target.value;\n    this.setState(args);\n  }\n\n  async handleSubmit(newItem) {\n    try {\n      const docRef = await addDoc(collection(this.props.db, \"fooditems\"), newItem);\n      //console.log(\"Document written with ID: \", docRef.id);\n      newItem.id = docRef.id;\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n\n    this.setState(state => ({\n      items: state.items.concat(newItem),\n    }));\n  }\n  async handleEditSubmit(editedItem) {\n    const iRef = doc(this.props.db, \"fooditems\", this.state.editId);\n    await updateDoc(iRef, editedItem);\n    \n    editedItem.id = this.state.editId;\n\n    this.state.items[this.state.editing] = editedItem;\n    this.setState(state => ({\n      items: this.state.items,\n      editing: -1\n    }));\n  }\n  async deleteItem(index, e) {\n    await deleteDoc(doc(this.props.db, \"fooditems\", this.state.items[index].id));\n    this.state.items.splice(index, 1);\n    this.setState(state => ({\n      items: this.state.items,\n    }));\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\">\n        <br/>\n        <Link className=\"button\" to=\"/macroman/\">Back</Link>\n        <br/>\n        <table className=\"table is-fullwidth is-hoverable\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Amount</th>\n              <th>Volume</th>\n              <th>Cals</th>\n              <th>Protein</th>\n              <th>Fat</th>\n              <th>Carbs</th>\n              <th>Servings</th>\n              <th></th>\n              <th></th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {this.state.items.map((item, index) => (\n              <tr key={'row'+index}>\n                <td>{item.name}</td>\n                <td>{item.amount+' '+item.unit}</td>\n                <td>{(item.volume || '')+' '+(item.vol_unit || '')}</td>\n                <td>{(item.cals*item.servings/item.totalservings).toFixed(2)}</td>\n                <td>{(item.protein*item.servings/item.totalservings).toFixed(2)}</td>\n                <td>{(item.fat*item.servings/item.totalservings).toFixed(2)}</td>\n                <td>{(item.carbs*item.servings/item.totalservings).toFixed(2)}</td>\n                <td>{item.servings+'/'+item.totalservings}</td>\n                <td>\n                  <p className=\"buttons\">\n                    <button className=\"button is-small\" onClick={this.startEdit.bind(this, index)}>\n                      <span className=\"icon is-small has-text-primary\">\n                        <i className=\"fas fa-pen\"></i>\n                      </span>\n                    </button>\n                  </p>\n                </td>\n                <td>\n                  <p className=\"buttons\">\n                    <button className=\"button is-small\" onClick={this.deleteItem.bind(this, index)}>\n                      <span className=\"icon is-small has-text-danger\">\n                        <i className=\"fas fa-times\"></i>\n                      </span>\n                    </button>\n                  </p>\n                </td>\n              </tr>\n            \n            ))}\n          </tbody>\n            \n        </table>\n\n\n        <div className=\"columns\">\n          <div className=\"column\"></div>\n          <div className=\"column is-8\">\n            <ItemForm handleSubmit={this.handleSubmit} />\n          </div>\n          <div className=\"column\"></div>\n        </div>\n        \n        <div className={\"modal \"+(this.state.editing !== -1 ? 'is-active' : '')}>\n          <div className=\"modal-background\"></div>\n          <div className=\"modal-card\" style={{width:'60%'}}>\n            <header className=\"modal-card-head\">\n              <p className=\"modal-card-title\">Edit item</p>\n              <button className=\"delete\" aria-label=\"close\" onClick={() => {this.setState({editing: -1})}}></button>\n            </header>\n            <section className=\"modal-card-body\">\n              <ItemForm handleSubmit={this.handleEditSubmit} editing={this.state.editing} item={this.state.editing !== -1 ? this.state.items[this.state.editing] : {}} />\n            </section>\n            {/*<footer className=\"modal-card-foot\">\n              <button className=\"button is-success\">Save changes</button>\n              <button className=\"button\">Cancel</button>\n            </footer>*/}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  \n}\n\n","import React from 'react';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Login from './login';\nimport Recipe from './recipe';\nimport RecipeList from './recipe-list';\nimport FoodList from './food-list';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\n\n\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const firebaseConfig = {\n      apiKey: \"AIzaSyCugfMvDTmT8PSVd0B_4X6b7zOswwgU61s\",\n      authDomain: \"macroman-4a7e3.firebaseapp.com\",\n      projectId: \"macroman-4a7e3\",\n      storageBucket: \"macroman-4a7e3.appspot.com\",\n      messagingSenderId: \"357353968136\",\n      appId: \"1:357353968136:web:38cb575af02041f5d8b7bd\",\n      measurementId: \"G-BZG3MZ2HNQ\"\n    };\n\n    // Initialize Firebase\n    const app = initializeApp(firebaseConfig);\n    const db = getFirestore(app);\n    const auth = getAuth();\n\n\n    this.state = { \n      app: app,\n      db: db,\n      auth: auth,\n      user: null,\n      loading: true\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    // Check if user is logged in\n    onAuthStateChanged(this.state.auth, (user) => {\n      if (user) {\n        // User is signed in, see docs for a list of available properties\n        // https://firebase.google.com/docs/reference/js/firebase.User\n        //const uid = user.uid;\n\n        this.setState({\n          user: user,\n          loading:false\n        })\n\n        //const cityRef = doc(this.state.db, 'Users', uid);\n        //setDoc(cityRef, { role: 'admin' });\n      } else {\n\n        this.setState({\n          user: null,\n          loading: false\n        })\n      }\n    });\n  }\n  logout(e) {\n    signOut(this.state.auth).then(() => {\n      // Sign-out successful.\n      //console.log('signed out');\n      //window.location.reload();\n      //console.log(window.location.host);\n      window.location.href = window.location.protocol + \"//\" + window.location.host+'/macroman/';\n    }).catch((error) => {\n      // An error happened.\n      console.log(error);\n    });\n  }\n  handleChange(e) {\n    var args = {};\n    args[e.target.id] = e.target.value;\n    this.setState(args);\n  }\n  render() {\n    if (this.state.loading) return <div></div>;\n    if (!this.state.user) return <Login auth={this.state.auth} />;\n\n\n\n    // TODO\n    // create new recipe\n    // search for food in db -> query by filter -> see results to click -> add item to recipe\n    // recipe schema is: name, servings, [{fooditem_id, ratio, visible}]\n\n\n\n\n    return (\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/macroman/\" element={<RecipeList db={this.state.db} logout={this.logout.bind(this)} />} />\n          <Route path=\"/macroman/foods\" element={<FoodList db={this.state.db}/>} />\n          <Route path=\"/macroman/recipes/:recipeId\" element={<Recipe db={this.state.db} />} />\n          \n          <Route\n            path=\"*\"\n            element={\n              <main style={{ padding: \"12rem\" }}>\n                <p>Error: page does not exist</p>\n              </main>\n            }\n          />\n        </Routes>\n      </BrowserRouter>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}